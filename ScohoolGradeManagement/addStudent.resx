<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAAB4eAAABACAAUwMAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASlV6MAAAAAAAAAAAAAAAAEpVejAAnv8VAJj/Ko+A
        YDAAAAAAAAAAAACe/xUAmP8qAAAAAAAAAAAAAAAAAAAAAEhVerAAAAAAAAAAAAAAAABIVXqwAJr/Vh2T
        39SLfWDvAAAAAAAAAAAAmv9WAJj/qQAAAAAAAAAAAAAAAAAAAABJVXqQSFiAIAAAAABIWIAgSVV6kBCW
        7WEuj8z5i35ggAAAAAAAAAAAAJr/VgCY/6kAAAAAAAAAAAAAAAAAAAAAPmKSWxSF27AAl//ACJHx1weS
        89NBjLagLY/M+Y+AYBAAAAAAAAAAAACa/1YAmP+pAAAAAAAAAAAAAAAAAAAAAACY/9ACl/3xE5Xq2xiU
        4+dch5fpXIaW/yCT3NkAAAAAAAAAAAAAAAAAmv9WAJj/qQAAAAAAAAAAAAAAAACa/zAAmP//XoeU9It9
        YP+LfWD/jH1g3zyOvJUAmP+pAAAAAAAAAAAAAAAAAJr/VgCY/6kAAAAAAAAAAAAAAAAAl/9AAJj//4t9
        YOCLfWD/i31gv4+AYBAAmf+OAJn/xQCZ/1UAmf9VAJn/VQCZ/44Amf/FAJv/HAAAAAAAAAAAAJf/gACY
        /9+LfmCgi31g/4t9YOCPgGAgLo/LxC6Pzc0dkeXCAJj/qSGj0bwtp7/KLKbAzwCb/zgAAAAAAAAAAACY
        /5AAl//Ai4BgQIt9YP+LfWD/jH5h84t9YL+Be3ffXnXD/0Vw/2Btu2k4jG/cxoxv3MaTY+9xAAAAAAAA
        AAAAl//AAJn/UAAAAACLfWDQi31g/4t+YOcAAAAAUHD/EENw/+9DcP+g9qhEOPSkQqn0pEKp9qhEOAAA
        AAAAAAAAAAAAAAAAAAAAAAAAj4BgMIx9YbGFiHpWULf/QAAAAABIcP8gAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATbf/4E23//9NuP9wAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE23/+BNt///Tbj/cAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQv/8QTbr/PwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA3TsAAN07AADgewAAwHsAAMB7AADCcwAAggMAAJAz
        AACxkwAA+/8AAPz/AAD8/wAA//8AAP//AACJUE5HDQoaCgAAAA1JSERSAAAAHgAAAB4IBgAAADswrqIA
        AAAEZ0FNQQAAsY8L/GEFAAADCklEQVRIS+2WT0gUcRTHhw51CMI6hZfs3GUhwuOK/WE30YZgzSJyRLI/
        JkxExW7u7mRr2zqjLmZuBTFC2CXB7eIiBa5J2EV2L9EhaPW0Bwkli+rSr/dm34zzT9gNNzr4hS/u7733
        +31+v/fb2ZHb1n8pNsvXsEyzCp7VPMPzlKquWKZFAiAzPN28ipuhdPUEsKwFrJlvoHT1BCcedwHXUbp6
        QgjAljagLRKltl6CNFwjhJUpISJ/EKIDKQo7xMS/vGuW4gT2hGunoSEhLGfBzHBUiVPKEBOPSUw8WmDi
        cQ+FyheAx9ljjoGTFILTyg0WKDqiFCitCYA8mJnMN078ONA48Z3ZbJlnCMASgRmF8LRpBxgNG8I8nhBA
        qyZoXm+52jcXf307ndM9d3Ny8WvnqKOjHLSZ18GwiQa42zo7sAPv2RZDX+29j9A1vdVdb7rbn6VC6lsp
        Nqt7uWdweP3iiFeDmYUwAwybgAVFOwA244G/6e7ovcVr0t0c+lYk/HkgfGON9R+8w55yXnR0+uzL6zOd
        ObNfTdafJ5RTphNLAMhboDCmMqwrGLXl2/2OUQBcwqJfqZ0vbFC0SGUIlqErn2jBDFjdxJjDDmKtTNOd
        AnAWC7+N7c45wUqhI6IYXw5amGFrKeSQ1vrS5lQKuQsKklRog5pd2gAuptVuCRh/RAic6L+07g4ueTF5
        qLh1YJWrgaI1KmYrj/a9fzd0eCGjeItTAyfYROKUAZ4fOqLVFMf2N9F0h8oGoyzPs4uXH9Z+BHBWB6sP
        ApsuWhFYkqQdygXvalHZMw8T8jTRYqxbGPas42c51lXUJrqoInAocNITDPiY1OazvGeDrX4e4j9Hevy7
        cLw8WosbY/HYFWj9oKAV2VQROHjGLwJgiYaG4uea9kL8d2+br/Q7DYttgK0vDl0VntiXDrb6xmloEcTz
        oVaf9vK3gvEL5zx12WC8XwB/Abu2LhTwJ+HUWfysgxOxy/pjp8XNKhu82f3qMt8zLCaDC88Tp/sQKkiK
        419deELqsQZrKbStfy2O+wMGoA6hjTaBxAAAAABJRU5ErkJggg==
</value>
  </data>
</root>